# Generic startup file.
user nginx nginx;

worker_processes auto;
worker_cpu_affinity auto;

error_log /var/log/nginx/error.log;
pid       /var/run/nginx.pid;

events {
	worker_connections  1024;
}

http {
	include mime.types;
	default_type       application/octet-stream;
	error_log          /var/log/nginx/error.log;

	client_max_body_size 0;
	client_body_buffer_size 1k;
	client_header_buffer_size 1k;
	large_client_header_buffers 1 2k;
	client_body_timeout 60s;
	client_header_timeout 60s;
	keepalive_timeout 60s;
	send_timeout 60s;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	gzip on;

	fastcgi_buffering off;

	index index.php index.html index.htm;

	server {
		listen *:80 default;
		listen [::]:80 default;

		server_name _;
		root /var/www/html;

		index index.php;

		location = /favicon.ico {
			log_not_found off;
			access_log off;
		}

		location = /robots.txt {
			allow all;
			log_not_found off;
			access_log off;
		}

		location ~*\.(ico|css|js|gif|jpg|jpeg|png|svg|woff|ttf|eot)$ {
			access_log off;
		}

		# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
		# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
		location ~ /\. {
			deny all;
		}

		# Deny access to any files with a .php extension in the uploads directory
		# Works in sub-directory installs and also in multisite network
		# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
		location ~* /(?:uploads|files)/.*\.php$ {
			deny all;
		}

		location / {
				# This is cool because no php is touched for static content.
				# include the "?$args" part so non-default permalinks doesn't break when using query string
				try_files $uri $uri/ /index.php?$args;
		}

		if (!-e $request_filename) {
			rewrite (/wp-.*) /wp$1 last;
			rewrite (/.*\.php)$ /wp$1 last;
		}

		location ~ \.php$ {
			try_files $uri =404;
			include fastcgi.conf;
			fastcgi_pass php:9000;
			include fastcgi_params;

			fastcgi_buffers 256 48k;
			fastcgi_buffer_size 48k;
			fastcgi_connect_timeout 60s;
			fastcgi_send_timeout 60s;
			fastcgi_read_timeout 60s;
			fastcgi_busy_buffers_size 256k;
			fastcgi_max_temp_file_size 0;
			reset_timedout_connection on;
		}

		location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
			expires max;
			log_not_found off;
		}
	}
}
